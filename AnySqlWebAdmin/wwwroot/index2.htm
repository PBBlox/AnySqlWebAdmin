<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>Index</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />

    <style type="text/css">
        html, body {
            margin: 0px;
            padding: 0px;
            width: 100%;
            height: 100%;
        }
		
		
		
		.verticalText
		{
			display:flex;
			justify-content:center;
			align-items:center;
			
			#display: inline-block;
			
			
		    width: 1em;
			padding-left: 1mm;
			padding-right: 1mm;
			
		    text-align: center; 
		    vertical-align: middle;
			
		    color: black;
		    font-weight: bold;
		    font-size: 20px;
		    writing-mode: vertical-lr;
		    #writing-mode: vertical-rl;
		    -ms-writing-mode: tb-rl;
		    transform-origin: center;
		    transform: rotate(180deg);
		    padding-top: 2mm;
		    padding-bottom: 3mm;
		}

.flex-container {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: flex-start;
	align-items: center;
	
	#align-items: stretch;
	#align-content: stretch;
	
	flex-shrink: 1;
}
	

.verti
{
	display: inline-block;

	width: 1em;
	padding-left: 1mm;
	padding-right: 1mm;
	
	font-size: 20px;
	font-weight: bold;

	writing-mode: vertical-lr;
	#writing-mode: vertical-rl;
	-ms-writing-mode: tb-rl;
	transform-origin: center;
	transform: rotate(180deg);
}

		
    </style>

    <!--
    <script src="ts/Vanillatree/vanillatree.js?v=7"></script>
    <link rel="stylesheet" href="ts/Vanillatree/vanillatree.css?v=1">
    -->
</head>
<body>


<div class="flex-container">
  <div>
  	<span class="verti" >Januar</span>
  </div>
  <div>
	  <table style="background-color: green;">
	  <thead>
	    <tr>
	      <th>Header content 1</th>
	      <th>Header content 2</th>
	    </tr>
	  </thead>
	  <tbody>
	    <tr>
	      <td>Body content 1</td>
	      <td>Body content 2</td>
	    </tr>
		<tr>
	      <td>Body content 1</td>
	      <td>Body content 2</td>
	    </tr>
	  </tbody>
	  <tfoot>
	    <tr>
	      <td style="color: white; background-color: black;">Footer content 1</td>
	      <td style="color: white; background-color: black;">Footer content 2</td>
	    </tr>
	  </tfoot>
	</table>
  </div>
</div>

<br />
<br />

<div class="flex-container">
  <div>
  	<span class="verti" >Januar</span>
  </div>
  <div>
	  <table style="background-color: green;">
	  <thead>
	    <tr>
	      <th>Header content 1</th>
	      <th>Header content 2</th>
	    </tr>
	  </thead>
	  <tbody>
	    <tr>
	      <td>Body content 1</td>
	      <td>Body content 2</td>
	    </tr>
		<tr>
	      <td>Body content 1</td>
	      <td>Body content 2</td>
	    </tr>
	  </tbody>
	  <tfoot>
	    <tr>
	      <td style="color: white; background-color: black;">Footer content 1</td>
	      <td style="color: white; background-color: black;">Footer content 2</td>
	    </tr>
	  </tfoot>
	</table>
  </div>
</div>


<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />




<table border="1" >
  <tbody>
  
    <tr>
		<th class="foo" style="text-align: center;" rowspan="6">
			<span class="verticalText" >Januar</span>
		</th>
		<th>Heeeeader content 1</th>
		<th>Header content 2</th>
		<th>Header content 3</th>
    </tr>
    <tr>
      <td>One</td>
      <td>Other</td>
	  <td>Another</td>
    </tr>
    <tr>
      <td>One</td>
      <td>Other</td>
	  <td>Another</td>
    </tr>
    <tr>
      <td>One</td>
      <td>Other</td>
	  <td>Another</td>
    </tr>
    <tr>
      <td>One</td>
      <td>Other</td>
	  <td>Another</td>
    </tr>
	
	
	<tr>
      <td>Footer content 1</td>
      <td>Footer content 2</td>
	  <td>Footer content 3</td>
    </tr>
	
	
  </tbody>
  
</table>



<table style="background-color: green;">
  <thead>
    <tr>
      <th>Header content 1</th>
      <th>Header content 2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Body content 1</td>
      <td>Body content 2</td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td>Footer content 1</td>
      <td>Footer content 2</td>
    </tr>
  </tfoot>
</table>


    <div>
        <div className="awesome" style="border: '1px solid red';">
            <label htmlFor="name">Enter your name: </label>
            <input type="text" id="name" />
        </div>
        <p>Enter your HTML here</p>
        <p id="lol">@foobar2000</p>

        <p class="rofl"></p>
        <h1 class="rofl"></h1>
        <a class="rofl"></a>


    </div>

    <script>

if (!String.prototype.padStart) {
    String.prototype.padStart = function padStart(targetLength, padString) {
        targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;
        padString = String(padString !== undefined ? padString : ' ');
        if (this.length >= targetLength) {
            return String(this);
        } else {
            targetLength = targetLength - this.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
            }
            return padString.slice(0, targetLength) + String(this);
        }
    };
}

	function tableCreate() 
	{
	  //body reference 
	  var body = document.getElementsByTagName("body")[0];
	
	  // create elements <table> and a <tbody>
	  var tbl = document.createElement("table");
	  
	  tbl.setAttribute("style", "border: 1px solid black; ");
	  
	  
	  var tblHead = document.createElement("thead");
	  var headRow = document.createElement("tr");
	  
	  
	  for (var j = 0; j < 12; j++) 
	  {
	  	var headColumn = document.createElement("th");
		headColumn.setAttribute("style", "text-align: left;");
		headColumn.appendChild(document.createTextNode((j+1).toString().padStart(2, '0')));
		
		headRow.appendChild(headColumn);
	  }
	  
	  tblHead.appendChild(headRow);
	  tbl.appendChild(tblHead);
	  
	  
	  
	  
	  var tblBody = document.createElement("tbody");
	
	  // cells creation
	  for (var j = 0; j <= 2; j++) 
	  {
	    // table row creation
	    var row = document.createElement("tr");
	
	    for (var i = 0; i < 2; i++) 
		{
	      // create element <td> and text node 
	      //Make text node the contents of <td> element
	      // put <td> at end of the table row
	      var cell = document.createElement("td");
	      var cellText = document.createTextNode("cell is row " + j + ", column " + i);
	
	      cell.appendChild(cellText);
	      row.appendChild(cell);
	    }
	
	    //row added to end of table body
	    tblBody.appendChild(row);
	  }
	
	  // append the <tbody> inside the <table>
	  tbl.appendChild(tblBody);
	  
	  
	  var tblFoot = document.createElement("tfoot");
	  var footRow = document.createElement("tr");
	    
	  for (var j = 0; j <= 2; j++) 
	  {
		var footColumn = document.createElement("td");
		footColumn.setAttribute("style", "text-align: left;");
		footColumn.appendChild(document.createTextNode("hi"));
		
		tblFoot.appendChild(footColumn);
	  }
	  
	  tblFoot.appendChild(footRow);
	  tbl.appendChild(tblFoot);
	  
	  
	  // put <table> in the <body>
	  body.appendChild(tbl);
	}

tableCreate();

        // https://jsperf.com/innerhtml-vs-removechild/15
        // https://jsbench.github.io/#b80fc169aa8c7b31c71604ac9e2a3aa6
        function clear(parent)
        {
            var range = document.createRange();
            range.selectNodeContents(parent);
            range.deleteContents();

            // while (parent.lastChild) { parent.removeChild(parent.lastChild); } // 60m op/sec
            // while (parent.firstChild) { parent.removeChild(parent.firstChild); } // 49m op/sec
            // parent.innerHTML = ''; // 9m op/s

            /*
            while (parent.firstChild)
            {
                // parent.firstChild.remove(); // no go in IE11
                parent.removeChild(parent.firstChild);
            }
            */
        }

        var lol = document.getElementById("lol");
        clear(lol);
        lol.appendChild(document.createTextNode("foo"));

        // [].slice.call(document.getElementsByClassName('hot'));
        var eles = document.getElementsByClassName("rofl");
     
        //for (var el of eles)
        //{
        //    el.appendChild(document.createTextNode("foo"));
        //}

        // [].prototype.slice.call(eles);
        // Array.prototype.slice.call(eles);

        for (var i = 0; i < eles.length; i++)
        {
            eles.item(i).appendChild(document.createTextNode("foo"));
        }


    </script>

</body>
</html>
